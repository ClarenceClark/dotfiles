{
  ;; Layers you wish to have active
  ;; To get a list of all available layers, check github.com/dvcrn/proton/tree/master/src/cljs/proton/layers
  :layers [:core
           :tools/git
           :tools/linter
           :lang/clojure
           :lang/python
           :lang/javascript
           :lang/css
           :lang/json
           :lang/ruby
           :lang/less
           :lang/typescript
           :lang/haskell]

  :additional-packages [:project-manager
                        :language-lua
                        :linter-lua]

  ;; Packages that you want to disable.
  ;; Note that packages will be removed except bundled packages.
  ;; Bundled packages will be disabled instead.
  ;; Use this configuration instead of atom's `core.disabledPackages`
  :disabled-packages [:about
                      :welcome]

  ;; Proton takes over your atom configuration. All settings that are not listed here will get wiped
  ;; Configurations are denoted as 2 element vector consisting of k/v
  ;; sub-vectors inside v will get treated like javascript arrays
  :configuration
  [
    ;; appearance
    ["editor.fontFamily" "Hasklig"]
    ["editor.fontSize" 12]
    ["editor.scrollPastEnd" true]
    ["editor.showInvisibles" true]

    ;; Addons config
    ["linter-clojure.clojureExecutablePath" "/usr/local/bin/clojure"]

    ;; the current default theme
    ["core.themes" ["one-dark-ui" "solarized-dark-syntax"]]

    ;; proton configuration
    ["proton.core.showTabBar" true]
    ["proton.core.relativeLineNumbers" true]
    ["proton.core.alwaysShowWelcomeScreen" false]

    ;; prefer classic vim mode over vim-mode-plus? Change this to :vim-mode
    ["proton.core.inputProvider" :vim-mode-plus]]


  ;; Don't like a keybinding or want to add something yourself? Do it here
  ;; The following example adds a category `foo-category` under <SPC>z
  ;; and adds a action under `y` with the title `execute hello`.
  ;; Upon executing, proton will dispatch the action `hello` on the current view
  ;;
  ;; :keybindings {:z {:category "foo-category"
  ;;                   :y {:title "execute hello"
  ;;                       :action "hello"}}}
  :keybindings
  {:t {:category "toggle"
       :p {:title "toggle parinfer mode"
           :action "parinfer:toggle-mode"}}}

  ;; Want some custom behavior inside a certain window?
  ;; Add your own nifty things here!
  :keymaps [{:selector ".tree-view"
             :keymap [["escape" "tree-view:toggle"]]}
            ;; Want to rebind ESC to something else? You can do that here.
            ;; If you are good with esc, just remove the following line.
            {:selector "atom-text-editor.vim-mode-plus:not(.normal-mode)"
             :keymap [["f d" "vim-mode-plus:activate-normal-mode"]]}]}
            ;; {:selector "atom-text-editor.vim-mode:not(.normal-mode)" :keymap [["f d" "vim-mode:activate-normal-mode"]]}
